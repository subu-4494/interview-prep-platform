{"ast":null,"code":"var _jsxFileName = \"D:\\\\web development\\\\Projects\\\\interview-prep-platform\\\\Frontend\\\\src\\\\components\\\\interviewroom.js\",\n  _s = $RefreshSig$();\n// src/components/interviewroom.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InterviewRoom = ({\n  roomId\n}) => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const localVideo = useRef();\n  const remoteVideo = useRef();\n  const peerConnection = useRef(null);\n  const localStream = useRef(null);\n  const servers = {\n    iceServers: [{\n      urls: 'stun:stun.l.google.com:19302'\n    }]\n  };\n  useEffect(() => {\n    const s = io('http://localhost:5000');\n    setSocket(s);\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      localVideo.current.srcObject = stream;\n      localStream.current = stream;\n      s.emit('join-room', roomId);\n      s.on('peer-connected', async () => {\n        peerConnection.current = new RTCPeerConnection(servers);\n        localStream.current.getTracks().forEach(track => peerConnection.current.addTrack(track, localStream.current));\n        peerConnection.current.onicecandidate = event => {\n          if (event.candidate) {\n            s.emit('signal', {\n              roomId,\n              signalData: {\n                candidate: event.candidate\n              }\n            });\n          }\n        };\n        peerConnection.current.ontrack = event => {\n          remoteVideo.current.srcObject = event.streams[0];\n        };\n        const offer = await peerConnection.current.createOffer();\n        await peerConnection.current.setLocalDescription(offer);\n        s.emit('signal', {\n          roomId,\n          signalData: {\n            sdp: offer\n          }\n        });\n      });\n      s.on('signal', async ({\n        signalData\n      }) => {\n        if (!peerConnection.current) {\n          peerConnection.current = new RTCPeerConnection(servers);\n          localStream.current.getTracks().forEach(track => peerConnection.current.addTrack(track, localStream.current));\n          peerConnection.current.onicecandidate = event => {\n            if (event.candidate) {\n              s.emit('signal', {\n                roomId,\n                signalData: {\n                  candidate: event.candidate\n                }\n              });\n            }\n          };\n          peerConnection.current.ontrack = event => {\n            remoteVideo.current.srcObject = event.streams[0];\n          };\n        }\n        if (signalData.sdp) {\n          await peerConnection.current.setRemoteDescription(new RTCSessionDescription(signalData.sdp));\n          if (signalData.sdp.type === 'offer') {\n            const answer = await peerConnection.current.createAnswer();\n            await peerConnection.current.setLocalDescription(answer);\n            s.emit('signal', {\n              roomId,\n              signalData: {\n                sdp: answer\n              }\n            });\n          }\n        }\n        if (signalData.candidate) {\n          try {\n            await peerConnection.current.addIceCandidate(new RTCIceCandidate(signalData.candidate));\n          } catch (err) {\n            console.error('Error adding received ice candidate', err);\n          }\n        }\n      });\n    });\n    return () => {\n      s.disconnect();\n    };\n  }, [roomId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Interview Room: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: localVideo,\n        autoPlay: true,\n        muted: true,\n        style: {\n          width: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: remoteVideo,\n        autoPlay: true,\n        style: {\n          width: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(InterviewRoom, \"ltW3/V9ZgPwRotn+SnsPMgoRMGU=\");\n_c = InterviewRoom;\nexport default InterviewRoom;\nvar _c;\n$RefreshReg$(_c, \"InterviewRoom\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","InterviewRoom","roomId","_s","socket","setSocket","localVideo","remoteVideo","peerConnection","localStream","servers","iceServers","urls","s","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","emit","on","RTCPeerConnection","getTracks","forEach","track","addTrack","onicecandidate","event","candidate","signalData","ontrack","streams","offer","createOffer","setLocalDescription","sdp","setRemoteDescription","RTCSessionDescription","type","answer","createAnswer","addIceCandidate","RTCIceCandidate","err","console","error","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gap","ref","autoPlay","muted","width","_c","$RefreshReg$"],"sources":["D:/web development/Projects/interview-prep-platform/Frontend/src/components/interviewroom.js"],"sourcesContent":["// src/components/interviewroom.js\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst InterviewRoom = ({ roomId }) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const localVideo = useRef();\r\n  const remoteVideo = useRef();\r\n  const peerConnection = useRef(null);\r\n  const localStream = useRef(null);\r\n\r\n  const servers = {\r\n    iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\r\n  };\r\n\r\n  useEffect(() => {\r\n    const s = io('http://localhost:5000');\r\n    setSocket(s);\r\n\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\r\n      localVideo.current.srcObject = stream;\r\n      localStream.current = stream;\r\n\r\n      s.emit('join-room', roomId);\r\n\r\n      s.on('peer-connected', async () => {\r\n        peerConnection.current = new RTCPeerConnection(servers);\r\n\r\n        localStream.current.getTracks().forEach(track =>\r\n          peerConnection.current.addTrack(track, localStream.current)\r\n        );\r\n\r\n        peerConnection.current.onicecandidate = event => {\r\n          if (event.candidate) {\r\n            s.emit('signal', { roomId, signalData: { candidate: event.candidate } });\r\n          }\r\n        };\r\n\r\n        peerConnection.current.ontrack = event => {\r\n          remoteVideo.current.srcObject = event.streams[0];\r\n        };\r\n\r\n        const offer = await peerConnection.current.createOffer();\r\n        await peerConnection.current.setLocalDescription(offer);\r\n        s.emit('signal', { roomId, signalData: { sdp: offer } });\r\n      });\r\n\r\n      s.on('signal', async ({ signalData }) => {\r\n        if (!peerConnection.current) {\r\n          peerConnection.current = new RTCPeerConnection(servers);\r\n\r\n          localStream.current.getTracks().forEach(track =>\r\n            peerConnection.current.addTrack(track, localStream.current)\r\n          );\r\n\r\n          peerConnection.current.onicecandidate = event => {\r\n            if (event.candidate) {\r\n              s.emit('signal', { roomId, signalData: { candidate: event.candidate } });\r\n            }\r\n          };\r\n\r\n          peerConnection.current.ontrack = event => {\r\n            remoteVideo.current.srcObject = event.streams[0];\r\n          };\r\n        }\r\n\r\n        if (signalData.sdp) {\r\n          await peerConnection.current.setRemoteDescription(new RTCSessionDescription(signalData.sdp));\r\n          if (signalData.sdp.type === 'offer') {\r\n            const answer = await peerConnection.current.createAnswer();\r\n            await peerConnection.current.setLocalDescription(answer);\r\n            s.emit('signal', { roomId, signalData: { sdp: answer } });\r\n          }\r\n        }\r\n\r\n        if (signalData.candidate) {\r\n          try {\r\n            await peerConnection.current.addIceCandidate(new RTCIceCandidate(signalData.candidate));\r\n          } catch (err) {\r\n            console.error('Error adding received ice candidate', err);\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      s.disconnect();\r\n    };\r\n  }, [roomId]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Interview Room: {roomId}</h2>\r\n      <div style={{ display: 'flex', gap: '20px' }}>\r\n        <video ref={localVideo} autoPlay muted style={{ width: '300px' }} />\r\n        <video ref={remoteVideo} autoPlay style={{ width: '300px' }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterviewRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}